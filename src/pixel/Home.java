/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pixel;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author feminstincts
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();

        init();
    }

    private String choosenPath = "src/pixel/sample.jpg";
    private BufferedImage outputImage = null;
    
    private int random(int max){
        return (int)(Math.random()*max);
    }
    
    private void init(){
      BufferedImage img;
        try {
            img = ImageIO.read(new File(choosenPath));
            Image originalImage = img.getScaledInstance(lblImageOriginal.getWidth(), lblImageOriginal.getHeight(), WIDTH); 
            lblImageOriginal.setIcon(new ImageIcon(originalImage));

            String str = ImageToByte(img);
            txtBinary.setText(str);
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
    private String ImageToByte(BufferedImage img){
        ByteArrayOutputStream b = new ByteArrayOutputStream();
        StringBuilder sb = new StringBuilder();

        try {
            ImageIO.write(img, "jpg", b);

            byte[] jpgByteArray = b.toByteArray();

            for(byte by : jpgByteArray){
                sb.append(Integer.toBinaryString(by & 0xFF) + "\t");
            }
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return sb.toString().replaceAll("(.{100})", "$1\n");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlContainer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtBinary = new javax.swing.JTextArea();
        btnEncode = new javax.swing.JButton();
        lblImageOriginal = new javax.swing.JLabel();
        lblImageNew = new javax.swing.JLabel();
        btnFileChooser = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(710, 500));
        setResizable(false);

        pnlContainer.setPreferredSize(new java.awt.Dimension(710, 472));
        pnlContainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtBinary.setBackground(new java.awt.Color(0, 0, 0));
        txtBinary.setColumns(20);
        txtBinary.setForeground(new java.awt.Color(0, 102, 0));
        txtBinary.setRows(5);
        txtBinary.setText("Binary");
        txtBinary.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtBinary);

        pnlContainer.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 236, 460, 230));

        btnEncode.setBackground(new java.awt.Color(255, 255, 255));
        btnEncode.setText("Encode");
        btnEncode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEncodeMouseClicked(evt);
            }
        });
        btnEncode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncodeActionPerformed(evt);
            }
        });
        pnlContainer.add(btnEncode, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 320, 80, 50));
        pnlContainer.add(lblImageOriginal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 320, 220));
        pnlContainer.add(lblImageNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 320, 220));

        btnFileChooser.setBackground(new java.awt.Color(255, 255, 255));
        btnFileChooser.setText("Browse Image");
        btnFileChooser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFileChooserMouseClicked(evt);
            }
        });
        btnFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileChooserActionPerformed(evt);
            }
        });
        pnlContainer.add(btnFileChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 240, 120, 50));

        btnSave.setBackground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        pnlContainer.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 390, 80, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEncodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEncodeActionPerformed

    private void btnEncodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEncodeMouseClicked
        // TODO add your handling code here:
        File file  = new File(choosenPath);
        
        BufferedImage img = null;

        try {
            img = ImageIO.read(file);            
            BufferedImage bufferedImage = new BufferedImage(img.getWidth(), img.getHeight(),BufferedImage.TYPE_INT_ARGB);
            
            String colors = "";
            for(int i = 0; i < img.getHeight(); i++){
                for(int j = 0; j < img.getWidth(); j++){
                    Color color = new Color(img.getRGB(j, i));
                    int loc = i+j*img.getWidth();
                    int r = color.getRed();
                    int g = color.getGreen();
                    int b = color.getBlue();

                    //filter
                    int gray = (r+g+b)/3;
                    
                    //create filtered image
                    Color gColor = new Color(g,b,r);                        
                    if((i+j)%10 == 0){
                        gColor = new Color(255,255,255);                                                
                    }
                    bufferedImage.setRGB(j, i, gColor.getRGB());
                }
            }

        Image newImage = bufferedImage.getScaledInstance(lblImageNew.getWidth(), lblImageNew.getHeight(), WIDTH); 
        lblImageNew.setIcon(new ImageIcon(newImage));
            
        outputImage = bufferedImage;            

//            txtMessage.setText(colors);

        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnEncodeMouseClicked

    private void btnFileChooserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFileChooserMouseClicked
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*Images","jpg","gif","png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            lblImageOriginal.setIcon(new ImageIcon(path));
            choosenPath = path;

            BufferedImage img;            
            try {
                img = ImageIO.read(new File(choosenPath));

                Image originalImage = img.getScaledInstance(lblImageOriginal.getWidth(), lblImageOriginal.getHeight(), WIDTH); 
                lblImageOriginal.setIcon(new ImageIcon(originalImage));

                String str = ImageToByte(img);
                txtBinary.setText(str);
            } catch (IOException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnFileChooserMouseClicked

    private void btnFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileChooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFileChooserActionPerformed

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        try {
            // TODO add your handling code here:
            ImageIO.write(outputImage, "png", new File("src/pixel/output/image.png"));
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEncode;
    private javax.swing.JButton btnFileChooser;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImageNew;
    private javax.swing.JLabel lblImageOriginal;
    private javax.swing.JPanel pnlContainer;
    private javax.swing.JTextArea txtBinary;
    // End of variables declaration//GEN-END:variables
}
